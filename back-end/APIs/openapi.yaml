openapi: 3.0.3
info:
  title: Aplicações na Web - OpenAPI 3.0
  version: 1.0.0


paths:
  /login :
    put:
      tags:
        - Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: ok
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/User'
        '400':
          description: Invalid user
        '404':
          description: No user found

  /login/{user_id} :
    put:
      tags:
        - Login
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
            format: string
      requestBody:      
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginRequest'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginResponse'
        '400':
          description: Invalid user 
        '404':
          description: No user found
    
    get:
      tags:
        - Login
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: User successfully obtained!
          # content:
          #   application/json:
          #     schema:
          #       type: array
          #       items:
          #         $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: No id found for the given user name    
    delete:
      tags:
        - Login
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: User deleted successfully!
          # content:
            # application/json:
            #   schema:
            #     type: array
            #     items:
            #       $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: No id found for the given user name 
          
          
  /perfil :
    get:
      tags:
        - Perfil
      responses:
        '200':
          description: ok
          # content:
          #   application/json:
          #     schema:
          #       type: array
          #       items:
          #         $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: Not found
    delete:
      tags:
        - Perfil
      responses:
        '200':
          description: Profiles deleted successfully!
          # content:
          #   application/json:
          #     schema:
          #       type: array
          #       items:
          #         $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: Not found
            
  /perfil/{user_id} :
    put:
      tags:
        - Perfil
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
            format: string
      requestBody:      
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginRequest'
      responses:
        '200':
          description: Profile added successfully!
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/loginResponse'
        '400':
          description: Invalid user 
        '404':
          description: Not found

    get:
      tags:
        - Perfil
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Profile obtained successfully!
          # content:
          #   application/json:
          #     schema:
          #       type: array
          #       items:
          #         $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: Not found   
    delete:
      tags:
        - Perfil
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Profile deleted successfully!
          # content:
          #   application/json:
          #     schema:
          #       type: array
          #       items:
          #         $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: Not found
          
  /localizacao :
    put:
      tags:
        - Localização
      # requestBody:
      #   required: true
      #   # content:
      #   #   application/json:
      #   #     schema:
      #   #       $ref: '#/components/schemas/localizacaoRequest'
      responses:
        '200':
          description: OK
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/localizacaoResponse'
        '400':
          description: Invalid id
        '404':
          description: Not found
          
    get:
      tags:
        - Localização
      responses:
        '200':
          description: Locations added successfully!
          # content:
          #   application/json:
          #     schema:
          #       type: array
          #       items:
          #         $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: Not found

  /localizacao/{id_loc} :
    put:
      tags:
        - Localização
      parameters:
        - in: path
          name: id_loc
          required: true
          schema:
            type: string
            format: string
      requestBody:      
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/localizacaoRequest'
      responses:
        '200':
          description: Location added successfully!
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/localizacaoResponse'
        '400':
          description: Invalid id 
        '404':
          description: Not found
    
    get:
      tags:
        - Localização
      parameters:
        - in: path
          name: id_loc
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Location obtained successfully!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/localizacaoRequest'
        '400':
          description: Invalid id
        '404':
          description: Not found   
    delete:
      tags:
        - Localização
      parameters:
        - in: path
          name: id_loc
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Location deleted successfully!
          # content:
          #   application/json:
          #     schema:
          #       type: array
          #       items:
          #         $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: Not found 
        
  /produtos :
    put:
      tags:
        - Produtos
      # requestBody:
      #   required: true
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/loginRequest'
      responses:
        '200':
          description: ok
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/loginResponse'
        '400':
          description: Invalid id
        '404':
          description: Not found
          
    get:
      tags:
        - Produtos
      responses:
        '200':
          description: ok
          # content:
          #   application/json:
          #     schema:
          #       type: array
          #       items:
          #         $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: Not found

  /produtos/{id_prod} :
    put:
      tags:
        - Produtos
      parameters:
        - in: path
          name: id_prod
          required: true
          schema:
            type: string
            format: string
      # requestBody:      
      #   required: true
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/loginRequest'
      responses:
        '200':
          description: Product added successfully! 
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/loginResponse'
        '400':
          description: Invalid id 
        '404':
          description: Not found
    
    get:
      tags:
        - Produtos
      parameters:
        - in: path
          name: id_prod
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Product obtained successfully!
          # content:
          #   application/json:
          #     schema:
          #       type: array
          #       items:
          #         $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: Not found    
    delete:
      tags:
        - Produtos
      parameters:
        - in: path
          name: id_prod
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Product deleted successfully!
          # content:
          #   application/json:
          #     schema:
          #       type: array
          #       items:
          #         $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: Not found
  
  /feedback :
    put:
      tags:
        - Feedback
      # requestBody:
      #   required: true
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/loginRequest'
      responses:
        '200':
          description: ok
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/loginResponse'
        '400':
          description: Invalid
        '404':
          description: Not found
          
    get:
      tags:
        - Feedback
      responses:
        '200':
          description: ok
          # content:
          #   application/json:
          #     schema:
          #       type: array
          #       items:
          #         $ref: '#/components/schemas/User'
        '400':
          description: Invalid
        '404':
          description: Not found

  /feedback/{id_prod} :
    put:
      tags:
        - Feedback
      parameters:
        - in: path
          name: id_prod
          required: true
          schema:
            type: string
            format: string
      # requestBody:      
      #   required: true
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/loginRequest'
      responses:
        '200':
          description: Feedback added successfully!
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/loginResponse'
        '400':
          description: Invalid id 
        '404':
          description: Not found
    
    get:
      tags:
        - Feedback
      parameters:
        - in: path
          name: id_prod
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Feedback successfully obtained!
          # content:
          #   application/json:
          #     schema:
          #       type: array
          #       items:
          #         $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: Not found   
    delete:
      tags:
        - Feedback
      parameters:
        - in: path
          name: id_prod
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Feedback deleted successfully!
          # content:
          #   application/json:
          #     schema:
          #       type: array
          #       items:
          #         $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: Not found
          
  /noticias :
    put:
      tags:
        - Noticias
      # requestBody:
      #   required: true
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/loginRequest'
      responses:
        '200':
          description: ok
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/loginResponse'
        '400':
          description: Invalid id
        '404':
          description: Not found
          
    get:
      tags:
        - Noticias
      responses:
        '200':
          description: ok
          # content:
          #   application/json:
          #     schema:
          #       type: array
          #       items:
          #         $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: Not found

  /noticias/{id_noticias} :
    put:
      tags:
        - Noticias
      parameters:
        - in: path
          name: id_noticias
          required: true
          schema:
            type: string
            format: string
      # requestBody:      
      #   required: true
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/loginRequest'
      responses:
        '200':
          description: News added successfully!
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/loginResponse'
        '400':
          description: Invalid id 
        '404':
          description: Not found
    
    get:
      tags:
        - Noticias
      parameters:
        - in: path
          name: id_noticias
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: News obtained successfully!
          # content:
            # application/json:
            #   schema:
            #     type: array
            #     items:
            #       $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: Not found   
    delete:
      tags:
        - Noticias
      parameters:
        - in: path
          name: id_noticias
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: News deleted successfully!
          # content:
          #   application/json:
          #     schema:
          #       type: array
          #       items:
          #         $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: Not found  
          
  /estatisticas :
    put:
      tags:
        - Estatisticas
      # requestBody:
      #   required: true
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/loginRequest'
      responses:
        '200':
          description: ok
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/loginResponse'
        '400':
          description: Invalid id
        '404':
          description: Not found
          
    get:
      tags:
        - Estatisticas
      responses:
        '200':
          description: ok
          # content:
          #   application/json:
          #     schema:
          #       type: array
          #       items:
          #         $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: Not found
          
    delete:
      tags:
        - Estatisticas
      responses:
        '200':
          description: ok
          # content:
          #   application/json:
          #     schema:
          #       type: array
          #       items:
          #         $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: Not found 

  /estatisticas/{id_estatisticas} :
    put:
      tags:
        - Estatisticas
      parameters:
        - in: path
          name: id_estatisticas
          required: true
          schema:
            type: string
            format: string
      # requestBody:      
      #   required: true
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/loginRequest'
      responses:
        '200':
          description: Statistics added successfully!
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/loginResponse'
        '400':
          description: Invalid id 
        '404':
          description: Not found
    
    get:
      tags:
        - Estatisticas
      parameters:
        - in: path
          name: id_estatisticas
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Statistics obtained successfully!
          # content:
          #   application/json:
          #     schema:
          #       type: array
          #       items:
          #         $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: Not found 
    delete:
      tags:
        - Estatisticas
      parameters:
        - in: path
          name: id_estatisticas
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Statistics deleted successfully!
          # content:
          #   application/json:
          #     schema:
          #       type: array
          #       items:
          #         $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: Not found


components:
  schemas:
    User:
      type: object
      properties:
        message:
          type: string
          example: "Enter your credentials"
        
    Username:
      type: string
      example: john_doe
  
    Password:
      type: string
      example: password123
  
    loginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          $ref: '#/components/schemas/Username'
        password:
          $ref: '#/components/schemas/Password'

    loginResponse:
      type: object
      properties:
        message:
          type: string
          example: "Login successfully!"
          
    Location:
      type: string
      example: Telheiras
  
    localizacaoRequest:
      type: object
      required:
        - username
        - password
      properties:
        location:
          $ref: '#/components/schemas/Location'

    # localizacaoResponse:
    #   type: object
    #   properties:
    #     message:
    #       type: string
    #       example: "login feito com sucesso!"
        
          
  # securitySchemes:
  #   taxi_auth:
  #     type: oauth2
  #     flows:
  #       implicit:
  #         authorizationUrl: https://link_here_to_be_changed.io/oauth/authorize
  #         scopes:
  #           read:trips: read user trip information
  #           write:trips: create or update user trip information
  #           read:payment: read user payment methods
  #           write:payment: create or update user payment methods  


