openapi: 3.0.3
info:
  title: Aplicações na Web - OpenAPI 3.0
  version: 1.0.0


paths:
  /login :
    put:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginRequest1'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginResponse1'
        '400':
          description: Invalid user
        '404':
          description: No user found

  /login/{user_id} :
    put:
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
            format: string
      requestBody:      
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginRequest'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginResponse'
        '400':
          description: Invalid user 
        '404':
          description: No user found

  /login/{user_i}:
    get:
      parameters:
        - in: path
          name: user_i
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Invalid id
        '404':
          description: No id found for the given user name

components:
  schemas:
    User:
      type: object
      properties:
        mensagem:
          type: string
          example: "user xx"
        
    Username:
      type: string
      example: john_doe
  
    Password:
      type: string
      example: password123
  
    loginRequest1:
      type: object
      required:
        - username
        - password
      properties:
        username:
          $ref: '#/components/schemas/Username'
        password:
          $ref: '#/components/schemas/Password'

    loginResponse1:
      type: object
      properties:
        message:
          type: string
          example: "login feito com sucesso!"
    
    Username1:
      type: string
      example: john_doe
  
    Password1:
      type: string
      example: password123
  
    loginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          $ref: '#/components/schemas/Username1'
        password:
          $ref: '#/components/schemas/Password1'

    loginResponse:
      type: object
      properties:
        message:
          type: string
          example: "login feito com sucesso!"
        
          
  # securitySchemes:
  #   taxi_auth:
  #     type: oauth2
  #     flows:
  #       implicit:
  #         authorizationUrl: https://link_here_to_be_changed.io/oauth/authorize
  #         scopes:
  #           read:trips: read user trip information
  #           write:trips: create or update user trip information
  #           read:payment: read user payment methods
  #           write:payment: create or update user payment methods  


